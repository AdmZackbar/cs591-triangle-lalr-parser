Terminals unused in grammar

   endfile


Grammar

    0 $accept: Program $end

    1 Program: SingleCommand

    2 Command: SingleCommand
    3        | Command semicolon SingleCommand

    4 SingleCommand: %empty
    5              | VName assignment Expression
    6              | identifier leftpar ActualParamSeq rightpar
    7              | begin Command end
    8              | let Declaration in SingleCommand
    9              | if_lit Expression then SingleCommand else_lit SingleCommand
   10              | while_lit Expression do_lit SingleCommand

   11 Expression: SecondaryExpression
   12           | let Declaration in Expression
   13           | if_lit Expression then Expression else_lit Expression

   14 SecondaryExpression: PrimaryExpression
   15                    | SecondaryExpression op PrimaryExpression

   16 PrimaryExpression: number
   17                  | character
   18                  | VName
   19                  | identifier leftpar ActualParamSeq rightpar
   20                  | op PrimaryExpression
   21                  | leftpar Expression rightpar
   22                  | leftcurl RecordAggregate rightcurl
   23                  | leftbrac ArrayAggregate rightbrac

   24 RecordAggregate: identifier tilde Expression
   25                | identifier tilde Expression comma RecordAggregate

   26 ArrayAggregate: Expression
   27               | Expression comma ArrayAggregate

   28 VName: identifier
   29      | VName dot identifier
   30      | VName leftbrac Expression rightbrac

   31 Declaration: SingleDeclaration
   32            | Declaration semicolon SingleDeclaration

   33 SingleDeclaration: const_lit identifier tilde Expression
   34                  | var identifier colon TypeDenoter
   35                  | proc identifier leftpar FormalParamSeq rightpar tilde SingleCommand
   36                  | func identifier leftpar FormalParamSeq rightpar colon TypeDenoter tilde Expression
   37                  | type identifier tilde TypeDenoter

   38 FormalParamSeq: %empty
   39               | ProperFormalParamSeq

   40 ProperFormalParamSeq: FormalParam
   41                     | FormalParam comma ProperFormalParamSeq

   42 FormalParam: identifier colon TypeDenoter
   43            | var identifier colon TypeDenoter
   44            | proc identifier leftpar FormalParamSeq rightpar
   45            | func identifier leftpar FormalParamSeq rightpar colon TypeDenoter

   46 ActualParamSeq: %empty
   47               | ProperActualParamSeq

   48 ProperActualParamSeq: ActualParam
   49                     | ActualParam comma ProperActualParamSeq

   50 ActualParam: Expression
   51            | var VName
   52            | proc identifier
   53            | func identifier

   54 TypeDenoter: identifier
   55            | array number of TypeDenoter
   56            | record RecordTypeDenoter end

   57 RecordTypeDenoter: identifier colon TypeDenoter
   58                  | identifier colon TypeDenoter comma RecordTypeDenoter


Terminals, with rules where they appear

$end (0) 0
error (256)
endfile (258)
identifier (259) 6 19 24 25 28 29 33 34 35 36 37 42 43 44 45 52 53
    54 57 58
number (260) 16 55
character (261) 17
op (262) 15 20
leftpar (263) 6 19 21 35 36 44 45
rightpar (264) 6 19 21 35 36 44 45
leftcurl (265) 22
rightcurl (266) 22
leftbrac (267) 23 30
rightbrac (268) 23 30
comma (269) 25 27 41 49 58
colon (270) 34 36 42 43 45 57 58
tilde (271) 24 25 33 35 36 37
dot (272) 29
semicolon (273) 3 32
assignment (274) 5
array (275) 55
begin (276) 7
const_lit (277) 33
do_lit (278) 10
else_lit (279) 9 13
end (280) 7 56
func (281) 36 45 53
if_lit (282) 9 13
in (283) 8 12
let (284) 8 12
of (285) 55
proc (286) 35 44 52
record (287) 56
then (288) 9 13
type (289) 37
var (290) 34 43 51
while_lit (291) 10


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
Program (38)
    on left: 1, on right: 0
Command (39)
    on left: 2 3, on right: 3 7
SingleCommand (40)
    on left: 4 5 6 7 8 9 10, on right: 1 2 3 8 9 10 35
Expression (41)
    on left: 11 12 13, on right: 5 9 10 12 13 21 24 25 26 27 30 33
    36 50
SecondaryExpression (42)
    on left: 14 15, on right: 11 15
PrimaryExpression (43)
    on left: 16 17 18 19 20 21 22 23, on right: 14 15 20
RecordAggregate (44)
    on left: 24 25, on right: 22 25
ArrayAggregate (45)
    on left: 26 27, on right: 23 27
VName (46)
    on left: 28 29 30, on right: 5 18 29 30 51
Declaration (47)
    on left: 31 32, on right: 8 12 32
SingleDeclaration (48)
    on left: 33 34 35 36 37, on right: 31 32
FormalParamSeq (49)
    on left: 38 39, on right: 35 36 44 45
ProperFormalParamSeq (50)
    on left: 40 41, on right: 39 41
FormalParam (51)
    on left: 42 43 44 45, on right: 40 41
ActualParamSeq (52)
    on left: 46 47, on right: 6 19
ProperActualParamSeq (53)
    on left: 48 49, on right: 47 49
ActualParam (54)
    on left: 50 51 52 53, on right: 48 49
TypeDenoter (55)
    on left: 54 55 56, on right: 34 36 37 42 43 45 55 57 58
RecordTypeDenoter (56)
    on left: 57 58, on right: 56 58


State 0

    0 $accept: . Program $end

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    Program        go to state 6
    SingleCommand  go to state 7
    VName          go to state 8


State 1

    6 SingleCommand: identifier . leftpar ActualParamSeq rightpar
   28 VName: identifier .

    leftpar  shift, and go to state 9

    $default  reduce using rule 28 (VName)


State 2

    7 SingleCommand: begin . Command end

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    Command        go to state 10
    SingleCommand  go to state 11
    VName          go to state 8


State 3

    9 SingleCommand: if_lit . Expression then SingleCommand else_lit SingleCommand

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 21
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 4

    8 SingleCommand: let . Declaration in SingleCommand

    const_lit  shift, and go to state 25
    func       shift, and go to state 26
    proc       shift, and go to state 27
    type       shift, and go to state 28
    var        shift, and go to state 29

    Declaration        go to state 30
    SingleDeclaration  go to state 31


State 5

   10 SingleCommand: while_lit . Expression do_lit SingleCommand

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 32
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 33


State 7

    1 Program: SingleCommand .

    $default  reduce using rule 1 (Program)


State 8

    5 SingleCommand: VName . assignment Expression
   29 VName: VName . dot identifier
   30      | VName . leftbrac Expression rightbrac

    leftbrac    shift, and go to state 34
    dot         shift, and go to state 35
    assignment  shift, and go to state 36


State 9

    6 SingleCommand: identifier leftpar . ActualParamSeq rightpar

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    func        shift, and go to state 37
    if_lit      shift, and go to state 19
    let         shift, and go to state 20
    proc        shift, and go to state 38
    var         shift, and go to state 39

    $default  reduce using rule 46 (ActualParamSeq)

    Expression            go to state 40
    SecondaryExpression   go to state 22
    PrimaryExpression     go to state 23
    VName                 go to state 24
    ActualParamSeq        go to state 41
    ProperActualParamSeq  go to state 42
    ActualParam           go to state 43


State 10

    3 Command: Command . semicolon SingleCommand
    7 SingleCommand: begin Command . end

    semicolon  shift, and go to state 44
    end        shift, and go to state 45


State 11

    2 Command: SingleCommand .

    $default  reduce using rule 2 (Command)


State 12

   19 PrimaryExpression: identifier . leftpar ActualParamSeq rightpar
   28 VName: identifier .

    leftpar  shift, and go to state 46

    $default  reduce using rule 28 (VName)


State 13

   16 PrimaryExpression: number .

    $default  reduce using rule 16 (PrimaryExpression)


State 14

   17 PrimaryExpression: character .

    $default  reduce using rule 17 (PrimaryExpression)


State 15

   20 PrimaryExpression: op . PrimaryExpression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18

    PrimaryExpression  go to state 47
    VName              go to state 24


State 16

   21 PrimaryExpression: leftpar . Expression rightpar

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 48
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 17

   22 PrimaryExpression: leftcurl . RecordAggregate rightcurl

    identifier  shift, and go to state 49

    RecordAggregate  go to state 50


State 18

   23 PrimaryExpression: leftbrac . ArrayAggregate rightbrac

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 51
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    ArrayAggregate       go to state 52
    VName                go to state 24


State 19

   13 Expression: if_lit . Expression then Expression else_lit Expression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 53
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 20

   12 Expression: let . Declaration in Expression

    const_lit  shift, and go to state 25
    func       shift, and go to state 26
    proc       shift, and go to state 27
    type       shift, and go to state 28
    var        shift, and go to state 29

    Declaration        go to state 54
    SingleDeclaration  go to state 31


State 21

    9 SingleCommand: if_lit Expression . then SingleCommand else_lit SingleCommand

    then  shift, and go to state 55


State 22

   11 Expression: SecondaryExpression .
   15 SecondaryExpression: SecondaryExpression . op PrimaryExpression

    op  shift, and go to state 56

    $default  reduce using rule 11 (Expression)


State 23

   14 SecondaryExpression: PrimaryExpression .

    $default  reduce using rule 14 (SecondaryExpression)


State 24

   18 PrimaryExpression: VName .
   29 VName: VName . dot identifier
   30      | VName . leftbrac Expression rightbrac

    leftbrac  shift, and go to state 34
    dot       shift, and go to state 35

    $default  reduce using rule 18 (PrimaryExpression)


State 25

   33 SingleDeclaration: const_lit . identifier tilde Expression

    identifier  shift, and go to state 57


State 26

   36 SingleDeclaration: func . identifier leftpar FormalParamSeq rightpar colon TypeDenoter tilde Expression

    identifier  shift, and go to state 58


State 27

   35 SingleDeclaration: proc . identifier leftpar FormalParamSeq rightpar tilde SingleCommand

    identifier  shift, and go to state 59


State 28

   37 SingleDeclaration: type . identifier tilde TypeDenoter

    identifier  shift, and go to state 60


State 29

   34 SingleDeclaration: var . identifier colon TypeDenoter

    identifier  shift, and go to state 61


State 30

    8 SingleCommand: let Declaration . in SingleCommand
   32 Declaration: Declaration . semicolon SingleDeclaration

    semicolon  shift, and go to state 62
    in         shift, and go to state 63


State 31

   31 Declaration: SingleDeclaration .

    $default  reduce using rule 31 (Declaration)


State 32

   10 SingleCommand: while_lit Expression . do_lit SingleCommand

    do_lit  shift, and go to state 64


State 33

    0 $accept: Program $end .

    $default  accept


State 34

   30 VName: VName leftbrac . Expression rightbrac

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 65
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 35

   29 VName: VName dot . identifier

    identifier  shift, and go to state 66


State 36

    5 SingleCommand: VName assignment . Expression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 67
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 37

   53 ActualParam: func . identifier

    identifier  shift, and go to state 68


State 38

   52 ActualParam: proc . identifier

    identifier  shift, and go to state 69


State 39

   51 ActualParam: var . VName

    identifier  shift, and go to state 70

    VName  go to state 71


State 40

   50 ActualParam: Expression .

    $default  reduce using rule 50 (ActualParam)


State 41

    6 SingleCommand: identifier leftpar ActualParamSeq . rightpar

    rightpar  shift, and go to state 72


State 42

   47 ActualParamSeq: ProperActualParamSeq .

    $default  reduce using rule 47 (ActualParamSeq)


State 43

   48 ProperActualParamSeq: ActualParam .
   49                     | ActualParam . comma ProperActualParamSeq

    comma  shift, and go to state 73

    $default  reduce using rule 48 (ProperActualParamSeq)


State 44

    3 Command: Command semicolon . SingleCommand

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    SingleCommand  go to state 74
    VName          go to state 8


State 45

    7 SingleCommand: begin Command end .

    $default  reduce using rule 7 (SingleCommand)


State 46

   19 PrimaryExpression: identifier leftpar . ActualParamSeq rightpar

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    func        shift, and go to state 37
    if_lit      shift, and go to state 19
    let         shift, and go to state 20
    proc        shift, and go to state 38
    var         shift, and go to state 39

    $default  reduce using rule 46 (ActualParamSeq)

    Expression            go to state 40
    SecondaryExpression   go to state 22
    PrimaryExpression     go to state 23
    VName                 go to state 24
    ActualParamSeq        go to state 75
    ProperActualParamSeq  go to state 42
    ActualParam           go to state 43


State 47

   20 PrimaryExpression: op PrimaryExpression .

    $default  reduce using rule 20 (PrimaryExpression)


State 48

   21 PrimaryExpression: leftpar Expression . rightpar

    rightpar  shift, and go to state 76


State 49

   24 RecordAggregate: identifier . tilde Expression
   25                | identifier . tilde Expression comma RecordAggregate

    tilde  shift, and go to state 77


State 50

   22 PrimaryExpression: leftcurl RecordAggregate . rightcurl

    rightcurl  shift, and go to state 78


State 51

   26 ArrayAggregate: Expression .
   27               | Expression . comma ArrayAggregate

    comma  shift, and go to state 79

    $default  reduce using rule 26 (ArrayAggregate)


State 52

   23 PrimaryExpression: leftbrac ArrayAggregate . rightbrac

    rightbrac  shift, and go to state 80


State 53

   13 Expression: if_lit Expression . then Expression else_lit Expression

    then  shift, and go to state 81


State 54

   12 Expression: let Declaration . in Expression
   32 Declaration: Declaration . semicolon SingleDeclaration

    semicolon  shift, and go to state 62
    in         shift, and go to state 82


State 55

    9 SingleCommand: if_lit Expression then . SingleCommand else_lit SingleCommand

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    SingleCommand  go to state 83
    VName          go to state 8


State 56

   15 SecondaryExpression: SecondaryExpression op . PrimaryExpression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18

    PrimaryExpression  go to state 84
    VName              go to state 24


State 57

   33 SingleDeclaration: const_lit identifier . tilde Expression

    tilde  shift, and go to state 85


State 58

   36 SingleDeclaration: func identifier . leftpar FormalParamSeq rightpar colon TypeDenoter tilde Expression

    leftpar  shift, and go to state 86


State 59

   35 SingleDeclaration: proc identifier . leftpar FormalParamSeq rightpar tilde SingleCommand

    leftpar  shift, and go to state 87


State 60

   37 SingleDeclaration: type identifier . tilde TypeDenoter

    tilde  shift, and go to state 88


State 61

   34 SingleDeclaration: var identifier . colon TypeDenoter

    colon  shift, and go to state 89


State 62

   32 Declaration: Declaration semicolon . SingleDeclaration

    const_lit  shift, and go to state 25
    func       shift, and go to state 26
    proc       shift, and go to state 27
    type       shift, and go to state 28
    var        shift, and go to state 29

    SingleDeclaration  go to state 90


State 63

    8 SingleCommand: let Declaration in . SingleCommand

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    SingleCommand  go to state 91
    VName          go to state 8


State 64

   10 SingleCommand: while_lit Expression do_lit . SingleCommand

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    SingleCommand  go to state 92
    VName          go to state 8


State 65

   30 VName: VName leftbrac Expression . rightbrac

    rightbrac  shift, and go to state 93


State 66

   29 VName: VName dot identifier .

    $default  reduce using rule 29 (VName)


State 67

    5 SingleCommand: VName assignment Expression .

    $default  reduce using rule 5 (SingleCommand)


State 68

   53 ActualParam: func identifier .

    $default  reduce using rule 53 (ActualParam)


State 69

   52 ActualParam: proc identifier .

    $default  reduce using rule 52 (ActualParam)


State 70

   28 VName: identifier .

    $default  reduce using rule 28 (VName)


State 71

   29 VName: VName . dot identifier
   30      | VName . leftbrac Expression rightbrac
   51 ActualParam: var VName .

    leftbrac  shift, and go to state 34
    dot       shift, and go to state 35

    $default  reduce using rule 51 (ActualParam)


State 72

    6 SingleCommand: identifier leftpar ActualParamSeq rightpar .

    $default  reduce using rule 6 (SingleCommand)


State 73

   49 ProperActualParamSeq: ActualParam comma . ProperActualParamSeq

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    func        shift, and go to state 37
    if_lit      shift, and go to state 19
    let         shift, and go to state 20
    proc        shift, and go to state 38
    var         shift, and go to state 39

    Expression            go to state 40
    SecondaryExpression   go to state 22
    PrimaryExpression     go to state 23
    VName                 go to state 24
    ProperActualParamSeq  go to state 94
    ActualParam           go to state 43


State 74

    3 Command: Command semicolon SingleCommand .

    $default  reduce using rule 3 (Command)


State 75

   19 PrimaryExpression: identifier leftpar ActualParamSeq . rightpar

    rightpar  shift, and go to state 95


State 76

   21 PrimaryExpression: leftpar Expression rightpar .

    $default  reduce using rule 21 (PrimaryExpression)


State 77

   24 RecordAggregate: identifier tilde . Expression
   25                | identifier tilde . Expression comma RecordAggregate

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 96
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 78

   22 PrimaryExpression: leftcurl RecordAggregate rightcurl .

    $default  reduce using rule 22 (PrimaryExpression)


State 79

   27 ArrayAggregate: Expression comma . ArrayAggregate

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 51
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    ArrayAggregate       go to state 97
    VName                go to state 24


State 80

   23 PrimaryExpression: leftbrac ArrayAggregate rightbrac .

    $default  reduce using rule 23 (PrimaryExpression)


State 81

   13 Expression: if_lit Expression then . Expression else_lit Expression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 98
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 82

   12 Expression: let Declaration in . Expression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 99
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 83

    9 SingleCommand: if_lit Expression then SingleCommand . else_lit SingleCommand

    else_lit  shift, and go to state 100


State 84

   15 SecondaryExpression: SecondaryExpression op PrimaryExpression .

    $default  reduce using rule 15 (SecondaryExpression)


State 85

   33 SingleDeclaration: const_lit identifier tilde . Expression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 101
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 86

   36 SingleDeclaration: func identifier leftpar . FormalParamSeq rightpar colon TypeDenoter tilde Expression

    identifier  shift, and go to state 102
    func        shift, and go to state 103
    proc        shift, and go to state 104
    var         shift, and go to state 105

    $default  reduce using rule 38 (FormalParamSeq)

    FormalParamSeq        go to state 106
    ProperFormalParamSeq  go to state 107
    FormalParam           go to state 108


State 87

   35 SingleDeclaration: proc identifier leftpar . FormalParamSeq rightpar tilde SingleCommand

    identifier  shift, and go to state 102
    func        shift, and go to state 103
    proc        shift, and go to state 104
    var         shift, and go to state 105

    $default  reduce using rule 38 (FormalParamSeq)

    FormalParamSeq        go to state 109
    ProperFormalParamSeq  go to state 107
    FormalParam           go to state 108


State 88

   37 SingleDeclaration: type identifier tilde . TypeDenoter

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 113


State 89

   34 SingleDeclaration: var identifier colon . TypeDenoter

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 114


State 90

   32 Declaration: Declaration semicolon SingleDeclaration .

    $default  reduce using rule 32 (Declaration)


State 91

    8 SingleCommand: let Declaration in SingleCommand .

    $default  reduce using rule 8 (SingleCommand)


State 92

   10 SingleCommand: while_lit Expression do_lit SingleCommand .

    $default  reduce using rule 10 (SingleCommand)


State 93

   30 VName: VName leftbrac Expression rightbrac .

    $default  reduce using rule 30 (VName)


State 94

   49 ProperActualParamSeq: ActualParam comma ProperActualParamSeq .

    $default  reduce using rule 49 (ProperActualParamSeq)


State 95

   19 PrimaryExpression: identifier leftpar ActualParamSeq rightpar .

    $default  reduce using rule 19 (PrimaryExpression)


State 96

   24 RecordAggregate: identifier tilde Expression .
   25                | identifier tilde Expression . comma RecordAggregate

    comma  shift, and go to state 115

    $default  reduce using rule 24 (RecordAggregate)


State 97

   27 ArrayAggregate: Expression comma ArrayAggregate .

    $default  reduce using rule 27 (ArrayAggregate)


State 98

   13 Expression: if_lit Expression then Expression . else_lit Expression

    else_lit  shift, and go to state 116


State 99

   12 Expression: let Declaration in Expression .

    $default  reduce using rule 12 (Expression)


State 100

    9 SingleCommand: if_lit Expression then SingleCommand else_lit . SingleCommand

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    SingleCommand  go to state 117
    VName          go to state 8


State 101

   33 SingleDeclaration: const_lit identifier tilde Expression .

    $default  reduce using rule 33 (SingleDeclaration)


State 102

   42 FormalParam: identifier . colon TypeDenoter

    colon  shift, and go to state 118


State 103

   45 FormalParam: func . identifier leftpar FormalParamSeq rightpar colon TypeDenoter

    identifier  shift, and go to state 119


State 104

   44 FormalParam: proc . identifier leftpar FormalParamSeq rightpar

    identifier  shift, and go to state 120


State 105

   43 FormalParam: var . identifier colon TypeDenoter

    identifier  shift, and go to state 121


State 106

   36 SingleDeclaration: func identifier leftpar FormalParamSeq . rightpar colon TypeDenoter tilde Expression

    rightpar  shift, and go to state 122


State 107

   39 FormalParamSeq: ProperFormalParamSeq .

    $default  reduce using rule 39 (FormalParamSeq)


State 108

   40 ProperFormalParamSeq: FormalParam .
   41                     | FormalParam . comma ProperFormalParamSeq

    comma  shift, and go to state 123

    $default  reduce using rule 40 (ProperFormalParamSeq)


State 109

   35 SingleDeclaration: proc identifier leftpar FormalParamSeq . rightpar tilde SingleCommand

    rightpar  shift, and go to state 124


State 110

   54 TypeDenoter: identifier .

    $default  reduce using rule 54 (TypeDenoter)


State 111

   55 TypeDenoter: array . number of TypeDenoter

    number  shift, and go to state 125


State 112

   56 TypeDenoter: record . RecordTypeDenoter end

    identifier  shift, and go to state 126

    RecordTypeDenoter  go to state 127


State 113

   37 SingleDeclaration: type identifier tilde TypeDenoter .

    $default  reduce using rule 37 (SingleDeclaration)


State 114

   34 SingleDeclaration: var identifier colon TypeDenoter .

    $default  reduce using rule 34 (SingleDeclaration)


State 115

   25 RecordAggregate: identifier tilde Expression comma . RecordAggregate

    identifier  shift, and go to state 49

    RecordAggregate  go to state 128


State 116

   13 Expression: if_lit Expression then Expression else_lit . Expression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 129
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 117

    9 SingleCommand: if_lit Expression then SingleCommand else_lit SingleCommand .

    $default  reduce using rule 9 (SingleCommand)


State 118

   42 FormalParam: identifier colon . TypeDenoter

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 130


State 119

   45 FormalParam: func identifier . leftpar FormalParamSeq rightpar colon TypeDenoter

    leftpar  shift, and go to state 131


State 120

   44 FormalParam: proc identifier . leftpar FormalParamSeq rightpar

    leftpar  shift, and go to state 132


State 121

   43 FormalParam: var identifier . colon TypeDenoter

    colon  shift, and go to state 133


State 122

   36 SingleDeclaration: func identifier leftpar FormalParamSeq rightpar . colon TypeDenoter tilde Expression

    colon  shift, and go to state 134


State 123

   41 ProperFormalParamSeq: FormalParam comma . ProperFormalParamSeq

    identifier  shift, and go to state 102
    func        shift, and go to state 103
    proc        shift, and go to state 104
    var         shift, and go to state 105

    ProperFormalParamSeq  go to state 135
    FormalParam           go to state 108


State 124

   35 SingleDeclaration: proc identifier leftpar FormalParamSeq rightpar . tilde SingleCommand

    tilde  shift, and go to state 136


State 125

   55 TypeDenoter: array number . of TypeDenoter

    of  shift, and go to state 137


State 126

   57 RecordTypeDenoter: identifier . colon TypeDenoter
   58                  | identifier . colon TypeDenoter comma RecordTypeDenoter

    colon  shift, and go to state 138


State 127

   56 TypeDenoter: record RecordTypeDenoter . end

    end  shift, and go to state 139


State 128

   25 RecordAggregate: identifier tilde Expression comma RecordAggregate .

    $default  reduce using rule 25 (RecordAggregate)


State 129

   13 Expression: if_lit Expression then Expression else_lit Expression .

    $default  reduce using rule 13 (Expression)


State 130

   42 FormalParam: identifier colon TypeDenoter .

    $default  reduce using rule 42 (FormalParam)


State 131

   45 FormalParam: func identifier leftpar . FormalParamSeq rightpar colon TypeDenoter

    identifier  shift, and go to state 102
    func        shift, and go to state 103
    proc        shift, and go to state 104
    var         shift, and go to state 105

    $default  reduce using rule 38 (FormalParamSeq)

    FormalParamSeq        go to state 140
    ProperFormalParamSeq  go to state 107
    FormalParam           go to state 108


State 132

   44 FormalParam: proc identifier leftpar . FormalParamSeq rightpar

    identifier  shift, and go to state 102
    func        shift, and go to state 103
    proc        shift, and go to state 104
    var         shift, and go to state 105

    $default  reduce using rule 38 (FormalParamSeq)

    FormalParamSeq        go to state 141
    ProperFormalParamSeq  go to state 107
    FormalParam           go to state 108


State 133

   43 FormalParam: var identifier colon . TypeDenoter

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 142


State 134

   36 SingleDeclaration: func identifier leftpar FormalParamSeq rightpar colon . TypeDenoter tilde Expression

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 143


State 135

   41 ProperFormalParamSeq: FormalParam comma ProperFormalParamSeq .

    $default  reduce using rule 41 (ProperFormalParamSeq)


State 136

   35 SingleDeclaration: proc identifier leftpar FormalParamSeq rightpar tilde . SingleCommand

    identifier  shift, and go to state 1
    begin       shift, and go to state 2
    if_lit      shift, and go to state 3
    let         shift, and go to state 4
    while_lit   shift, and go to state 5

    $default  reduce using rule 4 (SingleCommand)

    SingleCommand  go to state 144
    VName          go to state 8


State 137

   55 TypeDenoter: array number of . TypeDenoter

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 145


State 138

   57 RecordTypeDenoter: identifier colon . TypeDenoter
   58                  | identifier colon . TypeDenoter comma RecordTypeDenoter

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 146


State 139

   56 TypeDenoter: record RecordTypeDenoter end .

    $default  reduce using rule 56 (TypeDenoter)


State 140

   45 FormalParam: func identifier leftpar FormalParamSeq . rightpar colon TypeDenoter

    rightpar  shift, and go to state 147


State 141

   44 FormalParam: proc identifier leftpar FormalParamSeq . rightpar

    rightpar  shift, and go to state 148


State 142

   43 FormalParam: var identifier colon TypeDenoter .

    $default  reduce using rule 43 (FormalParam)


State 143

   36 SingleDeclaration: func identifier leftpar FormalParamSeq rightpar colon TypeDenoter . tilde Expression

    tilde  shift, and go to state 149


State 144

   35 SingleDeclaration: proc identifier leftpar FormalParamSeq rightpar tilde SingleCommand .

    $default  reduce using rule 35 (SingleDeclaration)


State 145

   55 TypeDenoter: array number of TypeDenoter .

    $default  reduce using rule 55 (TypeDenoter)


State 146

   57 RecordTypeDenoter: identifier colon TypeDenoter .
   58                  | identifier colon TypeDenoter . comma RecordTypeDenoter

    comma  shift, and go to state 150

    $default  reduce using rule 57 (RecordTypeDenoter)


State 147

   45 FormalParam: func identifier leftpar FormalParamSeq rightpar . colon TypeDenoter

    colon  shift, and go to state 151


State 148

   44 FormalParam: proc identifier leftpar FormalParamSeq rightpar .

    $default  reduce using rule 44 (FormalParam)


State 149

   36 SingleDeclaration: func identifier leftpar FormalParamSeq rightpar colon TypeDenoter tilde . Expression

    identifier  shift, and go to state 12
    number      shift, and go to state 13
    character   shift, and go to state 14
    op          shift, and go to state 15
    leftpar     shift, and go to state 16
    leftcurl    shift, and go to state 17
    leftbrac    shift, and go to state 18
    if_lit      shift, and go to state 19
    let         shift, and go to state 20

    Expression           go to state 152
    SecondaryExpression  go to state 22
    PrimaryExpression    go to state 23
    VName                go to state 24


State 150

   58 RecordTypeDenoter: identifier colon TypeDenoter comma . RecordTypeDenoter

    identifier  shift, and go to state 126

    RecordTypeDenoter  go to state 153


State 151

   45 FormalParam: func identifier leftpar FormalParamSeq rightpar colon . TypeDenoter

    identifier  shift, and go to state 110
    array       shift, and go to state 111
    record      shift, and go to state 112

    TypeDenoter  go to state 154


State 152

   36 SingleDeclaration: func identifier leftpar FormalParamSeq rightpar colon TypeDenoter tilde Expression .

    $default  reduce using rule 36 (SingleDeclaration)


State 153

   58 RecordTypeDenoter: identifier colon TypeDenoter comma RecordTypeDenoter .

    $default  reduce using rule 58 (RecordTypeDenoter)


State 154

   45 FormalParam: func identifier leftpar FormalParamSeq rightpar colon TypeDenoter .

    $default  reduce using rule 45 (FormalParam)
